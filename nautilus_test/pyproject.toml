[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "nautilus-test"
version = "0.1.0"
description = "NautilusTrader test environment following project conventions"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "nautilus-trader>=1.219.0",
    "pandas>=2.0.0",
    "requests>=2.32.4",
    "rich>=14.0.0",
    "finplot>=1.9.7",
    "polars>=1.30.0",
    "attrs>=25.3.0",
    "loguru>=0.7.3",
    "httpx>=0.28.1",
    "fsspec>=2025.5.1",
    "tenacity>=9.1.2",
    "pendulum>=3.1.0",
    "platformdirs>=4.3.8",
    "python-binance>=1.0.29",
    "basedpyright>=1.30.1",
    "redis>=6.2.0",
    "ruff>=0.12.2",
    "optuna>=4.4.0",
    "scipy>=1.16.0",
    "scikit-learn>=1.7.1",
    "stumpy>=1.13.0",
    "pycatch22>=0.4.5",
    "scikit-optimize>=0.10.2",
    "pyqtgraph>=0.13.7",
]

[project.optional-dependencies]
dev = [
    "black",
    "ruff",
    "mypy",
    "pytest",
    "pytest-cov",
]

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 100
target-version = ['py312']

[tool.ruff]
line-length = 100
target-version = "py312"
src = ["src"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]

# Ignore trivial issues - focus on critical errors only
ignore = [
    "E501",  # Line too long (handled by formatter)
    "W293",  # Blank line contains whitespace
    "W291",  # Trailing whitespace
    "E203",  # Whitespace before ':' (conflicts with black)
    "E402",  # Module level import not at top of file (common in scripts)
    "B008",  # Do not perform function calls in argument defaults
    "UP007", # Use X | Y for union types (not critical)
]

[tool.ruff.lint.per-file-ignores]
# Sandbox files are experimental - ignore most style issues
"examples/sandbox/**" = ["E", "W", "B", "C4", "UP"]
# Test files can be more relaxed
"tests/**" = ["E501", "B008"]
# Scripts can have relaxed imports
"scripts/**" = ["E402"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
mypy_path = "src"

[tool.basedpyright]
include = ["src", "examples", "tests", "strategies"]
exclude = [
    "**/__pycache__",
    "**/.pytest_cache",
    "**/.mypy_cache",
    "**/.ruff_cache",
    "**/node_modules",
    ".venv",
]
typeCheckingMode = "standard"
# Critical errors only - ignore trivial issues
reportUnusedVariable = "none"           # Not critical
reportUnusedImport = "none"             # Not critical  
reportAttributeAccessIssue = "error"    # Critical for runtime
reportGeneralTypeIssues = "error"       # Critical for runtime
reportCallIssue = "error"               # Critical for runtime
reportArgumentType = "error"            # Critical for runtime
reportUnboundVariable = "error"         # Critical for runtime
# Ignore type annotation issues for experimental code
reportUnknownVariableType = "none"
reportUnknownMemberType = "none"
reportUnknownArgumentType = "none"
reportUnknownParameterType = "none"
reportMissingParameterType = "none"
reportUntypedBaseClass = "none"
reportMissingTypeStubs = "none"

[dependency-groups]
dev = [
    "pytest>=8.4.1",
]
