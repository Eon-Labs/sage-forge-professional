[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "sage-forge"
version = "0.1.0"
description = "Self-Adaptive Generative Evaluation framework for NautilusTrader"
readme = "README.md"
license = "MIT"
requires-python = ">=3.12"
authors = [{name = "SAGE Development Team", email = "dev@sage-forge.com"}]
keywords = ["trading", "nautilus", "machine-learning", "finance", "adaptive"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

# Exact dependency versions for reproducibility and zero trial-and-error
dependencies = [
    # Core NautilusTrader ecosystem
    "nautilus-trader==1.219.0",
    
    # Data processing and management
    "pandas==2.3.1",
    "polars==1.31.0", 
    "pyarrow==20.0.0",
    
    # External APIs and networking
    "python-binance==1.0.29",
    "httpx==0.28.1",
    "tenacity==9.1.2",
    
    # Visualization and GUI
    "finplot==1.9.7",
    "pyqtgraph==0.13.7",
    
    # Machine learning and features
    "scikit-learn==1.7.1",
    "pycatch22==0.4.5",
    "scipy==1.16.0",
    "stumpy==1.13.0",
    
    # CLI and user interface
    "rich==14.0.0",
    "click==8.2.1",
    
    # Logging and utilities
    "loguru==0.7.3",
    "platformdirs==4.3.8",
    "attrs==25.3.0",
    
    # Development and validation
    "pendulum==3.1.0",
]

# Professional CLI interface
[project.scripts]
sage-forge = "sage_forge.cli.main:main"
sage-setup = "sage_forge.cli.setup:main"
sage-create = "sage_forge.cli.create:main"
sage-validate = "sage_forge.cli.validate:main"

[project.urls]
Homepage = "https://github.com/sage-forge/sage-forge"
Documentation = "https://sage-forge.readthedocs.io"
Repository = "https://github.com/sage-forge/sage-forge.git"
Issues = "https://github.com/sage-forge/sage-forge/issues"

# Development dependencies organized by purpose
[dependency-groups]
dev = [
    "pytest>=8.4.1",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.23.0",
    "black>=23.0.0",
    "ruff>=0.12.2",
    "mypy>=1.8.0",
    "basedpyright>=1.30.1",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0", 
    "mkdocstrings[python]>=0.24.0",
]
jupyter = [
    "jupyter>=1.0.0",
    "ipykernel>=6.0.0",
    "ipywidgets>=8.0.0",
    "matplotlib>=3.8.0",
]
performance = [
    "numba>=0.61.2",
    "bottleneck>=1.3.0",
    "cython>=3.0.0",
]

# UV optimizations for maximum efficiency
[tool.uv]
python-preference = "only-managed"  # Use UV-managed Python for consistency
resolution = "highest"              # Latest compatible versions
cache-dir = ".uv-cache"            # Local cache directory for speed
index-strategy = "unsafe-first-match"  # Faster resolution

# Modern package discovery (src/ layout)
[tool.hatchling.build.targets.wheel]
packages = ["src/sage_forge"]

# Code quality configuration
[tool.black]
line-length = 100
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # Exclude generated files
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 100
target-version = "py312"
src = ["src"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings  
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "N",   # pep8-naming
]

ignore = [
    "E501",  # Line too long (handled by black)
    "E203",  # Whitespace before ':' (conflicts with black)
    "B008",  # Do not perform function calls in argument defaults
]

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["E501", "B008", "N802", "N806"]
"examples/**" = ["E501", "B008"]
"scripts/**" = ["E402", "E501"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
mypy_path = "src"
namespace_packages = true
explicit_package_bases = true

[tool.basedpyright]
include = ["src", "examples", "tests", "scripts"]
exclude = [
    "**/__pycache__",
    "**/.pytest_cache", 
    "**/.mypy_cache",
    "**/.ruff_cache",
    ".uv-cache",
    ".venv",
]
typeCheckingMode = "standard"

# Critical runtime errors only
reportAttributeAccessIssue = "error"
reportGeneralTypeIssues = "error"
reportCallIssue = "error"
reportArgumentType = "error"
reportUnboundVariable = "error"

# Ignore non-critical type issues for faster development
reportUnusedVariable = "none"
reportUnusedImport = "none"
reportUnknownVariableType = "none"
reportUnknownMemberType = "none"
reportMissingTypeStubs = "none"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config", 
    "--cov=sage_forge",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]